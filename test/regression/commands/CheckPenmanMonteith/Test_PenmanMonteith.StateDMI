# Test checking Penman-Monteith data where each checked value is in error
# The set command won't let invalid data be set from parameters so use
# invalid values in the data file to trigger the check warnings.
# Compare the data csv to make sure the data are being produced as expected
# and the check file csv to make sure the checks are working.
# The expected status is Warning because the check will detect the missing values.
#@expectedStatus Warning
StartLog(LogFile="Results/Test_CheckPenmanMonteith.StateDMI.log")
RemoveFile(InputFile="Results\Test_CheckPenmanMonteith_out.csv",IfNotFound=Ignore)
RemoveFile(InputFile="Results\Test_CheckPenmanMonteith_out_check.csv",IfNotFound=Ignore)
RemoveFile(InputFile="Results\Test_CheckPenmanMonteith_out_check.html",IfNotFound=Ignore)
ReadPenmanMonteithFromStateCU(InputFile="Data\StateWidePM.kpm")
# Uncomment the following command to regenerate the expected results.
# WritePenmanMonteithToList(OutputFile="ExpectedResults/Test_CheckPenmanMonteith_out.csv")
WritePenmanMonteithToList(OutputFile="Results/Test_CheckPenmanMonteith_out.csv")
CompareFiles(InputFile1="ExpectedResults/Test_CheckPenmanMonteith_out.csv",InputFile2="Results/Test_CheckPenmanMonteith_out.csv",IfDifferent=Warn)
#
# Check the data and create the check file.
CheckPenmanMonteith(ID="*")
# Uncomment the following command to regenerate the expected results - may need to run twice.
# WriteCheckFile(OutputFile="ExpectedResults/Test_CheckPenmanMonteith_out_check.csv")
WriteCheckFile(OutputFile="Results/Test_CheckPenmanMonteith_out_check.csv")
WriteCheckFile(OutputFile="Results/Test_CheckPenmanMonteith_out_check.html")
CompareFiles(InputFile1="ExpectedResults/Test_CheckPenmanMonteith_out_check.csv",InputFile2="Results/Test_CheckPenmanMonteith_out_check.csv",IfDifferent=Warn)
