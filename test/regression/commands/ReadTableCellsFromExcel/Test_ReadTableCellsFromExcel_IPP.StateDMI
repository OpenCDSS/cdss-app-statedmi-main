# Test reading table cells from an Excel file:
#  * Use the IPP template as a test
StartLog(LogFile="Results/Test_ReadTableCellsFromExcel_IPP.TSTool.log")
RemoveFile(InputFile="Results/Test_ReadTableCellsFromExcel_IPP_out.csv",IfNotFound=Ignore)
# TODO SAM 2014-03-02 Evaluate whether to handle dates like strig or date - only an issue for true dates (many are simply year integers)
NewTable(TableID="IPPSummary",Columns="IppSheetVersion,DateTime;IppSheetExportDate,DateTime;IppCategoryType,String;IppSheetDate,DateTime;IppName,String;IppBndssId,String;IppBasin,String;IppSponsorBndssIdAndName,String;IppSponsorAddress1,String;IppSponsorAddress2,String;IppSponsorAddress3,String;IppSponsorPhone,String;IppSponsorWebsite,String;IppSponsorEmail,String;IppContact1Name,String;IppContact1Title,String;IppContact1Phone,String;IppContact1Email,String;IppContact2Name,String;IppContact2Title,String;IppContact2Phone,String;IppContact2Email,String;IppSummary,String;IppWebsite,String;IppAnnualYieldAF,integer;IppTotalCost,integer;IppNewStorageAF,integer;IppDeliveryStartYearOriginalEstimate,integer;IppDeliveryStartYearCurrentEstimate,integer;IppCompleteYearOriginalEstimate,integer;IppCompleteYearCurrentEstimate,integer;IppEndangeredSpeciesConcern,String;IppOtherPermittingRequirements,String;IppCurrentPermittingStatus,String;IppAnticipatedFinalPermitDate,integer;IppWaterCourtNeeded,String;IppWaterCourtSummary,String;IppWaterCourtStatus,String;IppAnticipatedWaterCourtFinal,integer;IppCwcbAssistanceSummary,String")
ReadTableCellsFromExcel(InputFile="Data\IPP-DataSheet-Template.xlsx",Worksheet="IPP Data Sheet",ColumnCellMap="IppSheetVersion:IppSheetVersion,IppSheetExportDate:IppSheetExportDate,IppCategoryType:IppCategoryType,IppSheetDate:IppSheetDate,IppName:IppName,IppBndssId:IppBndssId,IppBasin:IppBasin,IppSponsorBndssIdAndName:IppSponsorBndssIdAndName,IppSponsorAddress1:IppSponsorAddress1,IppSponsorAddress2:IppSponsorAddress2,IppSponsorAddress3:IppSponsorAddress3,IppSponsorPhone:IppSponsorPhone,IppSponsorWebsite:IppSponsorWebsite,IppSponsorEmail:IppSponsorEmail,IppContact1Name:IppContact1Name,IppContact1Title:IppContact1Title,IppContact1Phone:IppContact1Phone,IppContact1Email:IppContact1Email,IppContact2Name:IppContact2Name,IppContact2Title:IppContact2Title,IppContact2Phone:IppContact2Phone,IppContact2Email:IppContact2Email,IppSummary:IppSummary,IppWebsite:IppWebsite,IppAnnualYieldAF:IppAnnualYieldAF,IppTotalCost:IppTotalCost,IppNewStorageAF:IppNewStorageAF,IppDeliveryStartYearOriginalEstimate:IppDeliveryStartYearOriginalEstimate,IppDeliveryStartYearCurrentEstimate:IppDeliveryStartYearCurrentEstimate,IppCompleteYearOriginalEstimate:IppCompleteYearOriginalEstimate,IppCompleteYearCurrentEstimate:IppCompleteYearCurrentEstimate,IppEndangeredSpeciesConcern:IppEndangeredSpeciesConcern,IppOtherPermittingRequirements:IppOtherPermittingRequirements,IppCurrentPermittingStatus:IppCurrentPermittingStatus,IppAnticipatedFinalPermitDate:IppAnticipatedFinalPermitDate,IppWaterCourtNeeded:IppWaterCourtNeeded,IppWaterCourtSummary:IppWaterCourtSummary,IppWaterCourtStatus:IppWaterCourtStatus,IppAnticipatedWaterCourtFinal:IppAnticipatedWaterCourtFinal,IppCwcbAssistanceSummary:IppCwcbAssistanceSummary",TableID="IPPSummary",IfTableRowNotFound=Append)
Exit()
# Uncomment the following command to regenerate expected results
# WriteTableToDelimitedFile(TableID="Table_NoFormulas",OutputFile="ExpectedResults\Test_ReadTableCellsFromExcel_IPP_out.csv")
WriteTableToDelimitedFile(TableID="Table_NoFormulas",OutputFile="Results\Test_ReadTableCellsFromExcel_IPP_out.csv")
# Do regression comparison with the expected results
CompareFiles(InputFile1="ExpectedResults\Test_ReadTableCellsFromExcel_IPP_out.csv",InputFile2="Results/Test_ReadTableCellsFromExcel_IPP_out.csv",IfDifferent=Warn)
