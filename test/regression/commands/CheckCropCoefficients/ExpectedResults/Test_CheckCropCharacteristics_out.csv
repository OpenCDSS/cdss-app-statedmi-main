#HeaderRevision 0
#
# File generated by...
# program:      StateDMI 3.07.00 (2009-05-02)
# user:         sam
# date:         Fri May 08 12:21:48 MDT 2009
# host:         SOPRIS
# directory:    C:\Develop\StateDMI_SourceBuild\StateDMI\test\regression\commands\CheckCropCoefficients
# command line: StateDMI -home test\operational\CDSS
#----
# 
# StateCU crop characteristics as a delimited list file.
# 
# -----------------------------------------------------------------------
# Command file name: "C:\Develop\StateDMI_SourceBuild\StateDMI\test\regression\commands\CheckCropCoefficients\Test_CheckCropCharacteristics.StateDMI"
# Commands: 
# # Test check crop characteristics data where each checked value is in error
# # The set command won't let invalid data be set from parameters so use
# # missing values to trigger the check warnings.
# # Compare the data csv to make sure the data are being produced as expected
# # and the check file csv to make sure the checks are working.
# StartLog(LogFile="Results/Test_CheckCropCharacteristics.StateDMI.log")
# RemoveFile(InputFile="Results\Test_CheckCropCharacteristics_out.csv",IfNotFound=Ignore)
# RemoveFile(InputFile="Results\Test_CheckCropCharacteristics_out.html",IfNotFound=Ignore)
# SetCropCharacteristics(CropType="ALFALFA",IfNotFound=Add)
# # Uncomment the following command to regenerate the expected results.
# WriteCropCharacteristicsToList(OutputFile="ExpectedResults/Test_CheckCropCharacteristics_out.csv")
# WriteCropCharacteristicsToList(OutputFile="Results/Test_CheckCropCharacteristics_out.csv")
# CompareFiles(InputFile1="ExpectedResults/Test_CheckCropCharacteristics_out.csv",InputFile2="Results/Test_CheckCropCharacteristics_out.csv",WarnIfDifferent=True)
# #
# # Check the data and create the check file.
# CheckCropCharacteristics(ID="*")
# # Uncomment the following command to regenerate the expected results.
# WriteCheckFile(OutputFile="ExpectedResults/Test_CheckCropCharacteristics_out_check.csv")
# WriteCheckFile(OutputFile="Results/Test_CheckCropCharacteristics_out_check.csv")
# WriteCheckFile(OutputFile="Results/Test_CheckCropCharacteristics_out_check.html")
# CompareFiles(InputFile1="ExpectedResults/Test_CheckCropCharacteristics_out_check.csv",InputFile2="Results/Test_CheckCropCharacteristics_out_check.csv",WarnIfDifferent=True)
# 
# -----------------------------------------------------------------------------
# HydroBase database is: HydroBase on hbserver
# HydroBase.db_version:  design version: 20080701  last data change: 20080901
# HydroBase table structure for software is at least 2007052520070525
# HydroBase input name is "".
# Stored procedures are being used.
# -----------------------------------------------------------------------------
# 
#------------------------------------------------
"NAME","PLANTING MONTH","PLANTING DAY","HARVEST MONTH","HARVEST DAY","DAYS TO FULL COVER","SEASON LENGTH","TEMP EARLY MOISTURE (F)","TEMP LATE MOISTURE (F)","MANAGEMENT ALLOWABLE DEFICIT LEVEL","INITIAL ROOT ZONE DEPTH (IN)","MAXIMUM ROOT ZONE DEPTH (IN)","AVAILABLE WATER HOLDING CAPACITY AWC (IN)","MAXIMUM APPLICATION DEPTH (IN)","SPRING FROST FLAG","FALL FROST FLAG","DAYS BETWEEN 1ST AND 2ND CUT","DAYS BETWEEN 2ND AND 3RD CUT"
ALFALFA,-999,-999,-999,-999,-999,-999,-999.00,-999.00,-999.00,-999.00,-999.00,-999.00,-999.00,-999,-999,-999,-999
