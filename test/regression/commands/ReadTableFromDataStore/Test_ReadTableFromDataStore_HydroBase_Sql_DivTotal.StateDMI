# Test reading DivTotal data from a HydroBase data store using a SQL String
# The period is specified to try to freeze the queery so that future database updates
# don't break the test
StartLog(LogFile="Results/Test_ReadTableFromDataStore_HydroBase_Sql_DivTotal.TSTool.log")
RemoveFile(InputFile="Results/Test_ReadTableFromDataStore_HydroBase_Sql_DivTotal_out.csv",IfNotFound=Ignore)
ReadTableFromDataStore(DataStore="HydroBase",Sql="/* Test reading diversion records */ select meas_num, structure_num, quality, irr_year, fdu, ldu, dwc, maxq, maxq_date, nobs, amt_nov, amt_dec from vw_CDSS_AnnualAmt where meas_num = (select meas_num from vw_CDSS_StructureStructMeasType where wd = 1 and id = 501 and meas_type = 'DivTotal' and time_step='Annual') and irr_year >= 1970 and irr_year < 1980 order by irr_year",TableID="DivTotal",RowCountProperty="Test_ReadTableFromDataStore_HydroBase_Sql_DivTotal")
# Uncomment to regenerate expected results
# WriteTableToDelimitedFile(TableID="DivTotal",OutputFile="ExpectedResults/Test_ReadTableFromDataStore_HydroBase_Sql_DivTotal_out.csv")
# Generate the results.
WriteTableToDelimitedFile(TableID="DivTotal",OutputFile="Results/Test_ReadTableFromDataStore_HydroBase_Sql_DivTotal_out.csv")
# Do regression comparison with the expected results
CompareFiles(InputFile1="ExpectedResults/Test_ReadTableFromDataStore_HydroBase_Sql_DivTotal_out.csv",InputFile2="Results/Test_ReadTableFromDataStore_HydroBase_Sql_DivTotal_out.csv",IfDifferent=Warn)
