# Test reading DivTotal data from a HydroBase data store using a SQL String
# * The period is specified to freeze the queery so that future database updates don't break the test
# * The identifier is specified with the ${property} notation to test using properties
StartLog(LogFile="Results/Test_ReadTableFromDataStore_HydroBase_Sql_Property_DivTotal.TSTool.log")
RemoveFile(InputFile="Results/Test_ReadTableFromDataStore_HydroBase_Sql_Property_DivTotal_out.csv",IfNotFound=Ignore)
SetProperty(PropertyName="id",PropertyType=String,PropertyValue="501")
ReadTableFromDataStore(DataStore="HydroBase",Sql="select meas_num, structure_num, quality, irr_year, fdu, ldu, dwc, maxq, maxq_date, nobs, amt_nov, amt_dec from vw_CDSS_AnnualAmt where meas_num = (select meas_num from vw_CDSS_StructureStructMeasType where wd = 1 and id = ${id} and meas_type = 'DivTotal' and time_step='Annual') and irr_year >= 1970 and irr_year < 1980 order by irr_year",TableID="DivTotal")
# Uncomment to regenerate expected results
# WriteTableToDelimitedFile(TableID="DivTotal",OutputFile="ExpectedResults/Test_ReadTableFromDataStore_HydroBase_Sql_Property_DivTotal_out.csv")
# Generate the results.
WriteTableToDelimitedFile(TableID="DivTotal",OutputFile="Results/Test_ReadTableFromDataStore_HydroBase_Sql_Property_DivTotal_out.csv")
# Do regression comparison with the expected results
CompareFiles(InputFile1="ExpectedResults/Test_ReadTableFromDataStore_HydroBase_Sql_Property_DivTotal_out.csv",InputFile2="Results/Test_ReadTableFromDataStore_HydroBase_Sql_Property_DivTotal_out.csv",IfDifferent=Warn)
