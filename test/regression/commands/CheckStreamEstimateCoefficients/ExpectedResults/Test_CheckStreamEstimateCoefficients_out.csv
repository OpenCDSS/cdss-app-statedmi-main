#HeaderRevision 0
#
# File generated by...
# program:      StateDMI 3.08.00 (2009-06-01)
# user:         sam
# date:         Tue Jun 02 21:46:14 MDT 2009
# host:         SOPRIS
# directory:    C:\Develop\StateDMI_SourceBuild\StateDMI\test\regression\commands\CheckStreamEstimateCoefficients
# command line: StateDMI -home test\operational\CDSS
#----
# 
# StateMod stream estimate coefficients as a delimited list file.
# 
# -----------------------------------------------------------------------
# Command file name: "C:\Develop\StateDMI_SourceBuild\StateDMI\test\regression\commands\CheckStreamEstimateCoefficients\Test_CheckStreamEstimateCoefficients.StateDMI"
# Commands: 
# # Test check stream estimate coefficient data where each checked value is in error
# # The set command won't let invalid data be set from parameters so use
# # missing values to trigger the check warnings.
# # Compare the data csv to make sure the data are being produced as expected
# # and the check file csv to make sure the checks are working.
# # The expected status is Warning because the check will detect the missing values.
# #@expectedStatus Warning
# StartLog(LogFile="Results/Test_CheckStreamEstimateCoefficients.StateDMI.log")
# RemoveFile(InputFile="Results\Test_CheckStreamEstimateCoefficients_out.csv",IfNotFound=Ignore)
# RemoveFile(InputFile="Results\Test_CheckStreamEstimateCoefficients_out_check.csv",IfNotFound=Ignore)
# RemoveFile(InputFile="Results\Test_CheckStreamEstimateCoefficients_out_check.html",IfNotFound=Ignore)
# SetRiverNetworkNode(ID="Node1",IfNotFound=Add)
# ReadStreamEstimateCoefficientsFromStateMod(InputFile="Data\simple.rib")
# # Uncomment the following command to regenerate the expected results.
# WriteStreamEstimateCoefficientsToList(OutputFile="ExpectedResults/Test_CheckStreamEstimateCoefficients_out.csv")
# WriteStreamEstimateCoefficientsToList(OutputFile="Results/Test_CheckStreamEstimateCoefficients_out.csv")
# CompareFiles(InputFile1="ExpectedResults/Test_CheckStreamEstimateCoefficients_out.csv",InputFile2="Results/Test_CheckStreamEstimateCoefficients_out.csv",WarnIfDifferent=True)
# #
# # Check the data and create the check file.
# CheckStreamEstimateCoefficients(ID="*")
# # Uncomment the following command to regenerate the expected results.
# # WriteCheckFile(OutputFile="ExpectedResults/Test_CheckStreamEstimateCoefficients_out_check.csv")
# WriteCheckFile(OutputFile="Results/Test_CheckStreamEstimateCoefficients_out_check.csv")
# WriteCheckFile(OutputFile="Results/Test_CheckStreamEstimateCoefficients_out_check.html")
# CompareFiles(InputFile1="ExpectedResults/Test_CheckStreamEstimateCoefficients_out_check.csv",InputFile2="Results/Test_CheckStreamEstimateCoefficients_out_check.csv",WarnIfDifferent=True)
# 
# -----------------------------------------------------------------------------
# HydroBase database is: HydroBase on hbserver
# HydroBase.db_version:  design version: 20080701  last data change: 20080901
# HydroBase table structure for software is at least 2007052520070525
# HydroBase input name is "".
# Stored procedures are being used.
# -----------------------------------------------------------------------------
# 
#------------------------------------------------
"ID","STREAM TERM","UPSTREAM TERM GAGE","GAIN TERM PRORATION FACTOR","GAIN TERM WEIGHT","GAIN TERM GAGE ID"
,,,0.8,1.0,09010500
510848,3.0,99999999,0.7,1.0,09011000
510848,,,0.7,-1.0,09010500
513695,1.0,09011000,-0.4,1.0,09019500
513695,,,-0.4,-1.0,09011000
514620,1.0,09011000,3.0,1.0,09019500
514620,,,3.0,-4.0,09011000
