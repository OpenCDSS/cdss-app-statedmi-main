# Test writing diversion stations to list files with a couple of generated stations
StartLog(LogFile="Results/Test_WriteDiversionStationsToList.StateDMI.log")
RemoveFile(InputFile="Results\Test_WriteDiversionStationsToList_out.csv")
RemoveFile(InputFile="Results\Test_WriteDiversionStationsToList_out_ReturnFlows.csv")
RemoveFile(InputFile="Results\Test_WriteDiversionStationsToList_out_Collections.csv")
SetDiversionStation(ID="2000505",Name="Diversion 1",RiverNodeID="ID",OnOff=1,Capacity=101,ReplaceResOption=0,DailyID="ID",UserName="User1",DemandType=1,IrrigatedAcres=1001,UseType=1,DemandSource=1,EffMonthly="60,61,62,63,64,65,66,67,68,69,70,71",Returns="ret11,75,101;ret12,25,102",IfNotFound=Add)
SetDiversionStation(ID="2000631",Name="Diversion 2",RiverNodeID="ID",OnOff=1,Capacity=102,ReplaceResOption=1,DailyID="ID",UserName="user2",DemandType=1,IrrigatedAcres=1002,UseType=1,DemandSource=1,EffMonthly="70,71,72,73,74,75,76,77,78,79,80,81",Returns="ret21,75,21;ret22,25,22",IfNotFound=Add)
# Uncomment the following command to regenerate the expected results.
# WriteDiversionStationsToList(OutputFile="ExpectedResults/Test_WriteDiversionStationsToList_out.csv")
WriteDiversionStationsToList(OutputFile="Results/Test_WriteDiversionStationsToList_out.csv")
CompareFiles(InputFile1="ExpectedResults/Test_WriteDiversionStationsToList_out.csv",InputFile2="Results/Test_WriteDiversionStationsToList_out.csv",IfDifferent=Warn)
CompareFiles(InputFile1="ExpectedResults/Test_WriteDiversionStationsToList_out_ReturnFlows.csv",InputFile2="Results/Test_WriteDiversionStationsToList_out_ReturnFlows.csv",IfDifferent=Warn)
CompareFiles(InputFile1="ExpectedResults/Test_WriteDiversionStationsToList_out_Collections.csv",InputFile2="Results/Test_WriteDiversionStationsToList_out_Collections.csv",IfDifferent=Warn)
