#HeaderRevision 0
#
# File generated by...
# program:      StateDMI 3.08.00 (2009-06-01)
# user:         sam
# date:         Tue Jun 02 13:24:42 MDT 2009
# host:         SOPRIS
# directory:    C:\Develop\StateDMI_SourceBuild\StateDMI\test\regression\commands\CheckInstreamFlowRights
# command line: StateDMI -home test\operational\CDSS
#----
# 
# StateMod instream flow rights as a delimited list file.
# 
# -----------------------------------------------------------------------
# Command file name: "C:\Develop\StateDMI_SourceBuild\StateDMI\test\regression\commands\CheckInstreamFlowRights\Test_CheckInstreamFlowRights.StateDMI"
# Commands: 
# # Test check instream flow rights data where each checked value is in error
# # The set command won't let invalid data be set from parameters so read bad data
# # to trigger the check warnings.
# # Compare the data csv to make sure the data are being produced as expected
# # and the check file csv to make sure the checks are working.
# # The expected status is Warning because the check will detect the missing values.
# #@expectedStatus Warning
# StartLog(LogFile="Results/Test_CheckInstreamFlowRights.StateDMI.log")
# RemoveFile(InputFile="Results\Test_CheckInstreamFlowRights_out.csv",IfNotFound=Ignore)
# RemoveFile(InputFile="Results\Test_CheckInstreamFlowRights_out_check.csv",IfNotFound=Ignore)
# RemoveFile(InputFile="Results\Test_CheckInstreamFlowRights_out_check.html",IfNotFound=Ignore)
# # Define an instream flow  station to trigger the check of stations
# SetInstreamFlowStation(ID="InstreamFlow1",IfNotFound=Add)
# SetInstreamFlowRight(ID="Location1",IfNotFound=Add)
# # Also read some bad data...
# ReadInstreamFlowRightsFromStateMod(InputFile="Data\simple.ifr")
# # Uncomment the following command to regenerate the expected results.
# WriteInstreamFlowRightsToList(OutputFile="ExpectedResults/Test_CheckInstreamFlowRights_out.csv")
# WriteInstreamFlowRightsToList(OutputFile="Results/Test_CheckInstreamFlowRights_out.csv")
# CompareFiles(InputFile1="ExpectedResults/Test_CheckInstreamFlowRights_out.csv",InputFile2="Results/Test_CheckInstreamFlowRights_out.csv",WarnIfDifferent=True)
# #
# # Check the data and create the check file.
# CheckInstreamFlowRights(ID="*")
# # Uncomment the following command to regenerate the expected results.
# # WriteCheckFile(OutputFile="ExpectedResults/Test_CheckInstreamFlowRights_out_check.csv")
# WriteCheckFile(OutputFile="Results/Test_CheckInstreamFlowRights_out_check.csv")
# WriteCheckFile(OutputFile="Results/Test_CheckInstreamFlowRights_out_check.html")
# CompareFiles(InputFile1="ExpectedResults/Test_CheckInstreamFlowRights_out_check.csv",InputFile2="Results/Test_CheckInstreamFlowRights_out_check.csv",WarnIfDifferent=True)
# 
# -----------------------------------------------------------------------------
# HydroBase database is: HydroBase on hbserver
# HydroBase.db_version:  design version: 20080701  last data change: 20080901
# HydroBase table structure for software is at least 2007052520070525
# HydroBase input name is "".
# Stored procedures are being used.
# -----------------------------------------------------------------------------
# 
#------------------------------------------------
"RIGHT ID","RIGHT NAME","INSTREAM FLOW STATION ID ASSOCIATED WITH RIGHT","ADMINISTRATION NUMBER","DECREED AMOUNT (CFS)","ON/OFF SWITCH"
362000,,,,0.00,0
362002,InstreamFlow 2,999999,-2222.2222,-20.00,1
Location1,,,,0.00,1
