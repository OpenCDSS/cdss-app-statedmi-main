#HeaderRevision 0
#
# File generated by...
# program:      StateDMI 3.02.00 beta (2009-01-20)
# user:         sam
# date:         Tue Feb 10 15:48:54 MST 2009
# host:         SOPRIS
# directory:    C:\Develop\StateDMI_SourceBuild\StateDMI\test\regression\commands\CalculateWellStationEfficiencies
# command line: StateDMI -home test\operational\CDSS
#----
# -----------------------------------------------------------------------
# Command file name: "C:\Develop\StateDMI_SourceBuild\StateDMI\test\regression\commands\CalculateWellStationEfficiencies\Test_CalculateWellStationEfficiencies.StateDMI"
# Commands: 
# # Test calculating well station efficiencies from IWR and historical time series
# StartLog(LogFile="Results/Test_CalculateWellStationEfficiencies.StateDMI.log")
# RemoveFile(InputFile="Results\Test_CalculateWellStationEfficiencies_out.wes")
# RemoveFile(InputFile="Results\Test_CalculateWellStationEfficiencies_out.txt")
# SetOutputPeriod(OutputStart="1950-01",OutputEnd="1955-12")
# # Define stations for ID pattern checks
# SetWellStation(ID="200505",DemandType=1,DemandSource=1,IfNotFound=Add)
# SetWellStation(ID="200812",DemandType=1,DemandSource=1,IfNotFound=Add)
# # Read CWR (IWR) time series.
# ReadIrrigationWaterRequirementTSMonthlyFromStateCU(InputFile="Data\rg2007.ddc")
# # Generate historical time series
# SetWellHistoricalPumpingTSMonthlyConstant(ID="200505",Constant=1000,IfNotFound=Add)
# SetWellHistoricalPumpingTSMonthlyConstant(ID="200812",Constant=50000,IfNotFound=Add)
# # Calculate diversion station efficiencies
# CalculateWellStationEfficiencies(ID="*",EffReportFile="Results/Test_CalculateWellStationEfficiencies_out.txt")
# # Uncomment the following 2 commands to regenerate the expected results.
# WriteWellStationsToStateMod(OutputFile="ExpectedResults/Test_CalculateWellStationEfficiencies_out.wes")
# CalculateWellStationEfficiencies(ID="*",EffReportFile="ExpectedResults/Test_CalculateWellStationEfficiencies_out.txt")
# WriteWellStationsToStateMod(OutputFile="Results/Test_CalculateWellStationEfficiencies_out.wes")
# CompareFiles(InputFile1="ExpectedResults/Test_CalculateWellStationEfficiencies_out.wes",InputFile2="Results/Test_CalculateWellStationEfficiencies_out.wes",WarnIfDifferent=True)
# CompareFiles(InputFile1="ExpectedResults/Test_CalculateWellStationEfficiencies_out.txt",InputFile2="Results/Test_CalculateWellStationEfficiencies_out.txt",WarnIfDifferent=True)
# 
# -----------------------------------------------------------------------------
# HydroBase database is: HydroBase on hbserver
# HydroBase.db_version:  design version: 20080701  last data change: 20080901
# HydroBase table structure for software is at least 2007052520070525
# HydroBase input name is "".
# Stored procedures are being used.
# -----------------------------------------------------------------------------
# 
#------------------------------------------------
#>
#> *******************************************************
#>  StateMod Well Station File
#>
#>  Row 1 format:  (a12, a24, a12,i8, f8.2, 1x, a12, 1x, f12.5)
#>
#>  ID        cdividw:  Well ID
#>  Name      divnamw:  Well name
#>  Riv ID    idvstaw:  River Node where well is located
#>  On/Off    idivsww:  Switch 0=off; 1=on
#>  Capacity  divcapw:  Well capacity (cfs)
#>  Daily ID cdividyw:  Well ID to use for daily data
#>  Primary   primary:  See StateMod documentation
#>
#>  Row 2 format:  (36x, a12, 3i8, f8.2, f8.0, i8, f8.0)
#>
#>  DivID     idvcow2:  Diversion this well is tied to (N/A if not tied to a diversion)
#>  DataType  idvcomw:  Data type (see StateMod doc)
#>  #-Ret       nrtnw:  Number of return flow locations
#>  #-Dep      nrtnw2:  Number of depletion locations
#>  Eff %     divefcw:  System efficiency (%) - if negative, include row 3
#>  Area        areaw:  Area served.
#>  UseType   irturnw:  Use type; 1-3=Inbasin; 4=Transmountain
#>  Demsrc    demsrcw:  Irrig acreage source (1=GIS, 2=tia, 3=GIS-primary, 4=tia-primary,
#>                       5=secondary, 6=M&I no acreage, 7=carrier no acreage, 8=user),
#>
#>  Row 3   Variable efficiency data, % (enter if divefcw < 0) - free format
#>
#>  Row 4  format:  (36x, a12, f8.0, i8)
#>
#>  Ret Id   crtnidw:  River ID receiving return flow
#>  Ret %    pcttotw:  Percent of return flow to location 
#>  Table #  irtndlw:  Return flow table id
#>
#>  Row 5  format:  (36x, a12, f8.0, i8)
#>  Dep Id   crtnidw2:  River ID being depletion
#>  Dep %    pcttotw2:  Percent of depletion to river node 
#>  Table #  irtndlw2:  Return (depletion) table id
#>
#>   ID         Name                  Riv ID     On/Off Capacity  Daily ID     Primary    
#>---------eb----------------------eb----------eb------eb------exb----------exb----------e
#>                                       DivID  DataCode #-Ret   #-Dep   Eff %   Area   UseType  Demsrc
#>xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxb----------eb------eb------eb------eb------eb------eb------eb------e
#>  Eff %    Diveff Efficiency for month 1-12 where 1 is tied to year type
#>eff(1)  eff(2)  eff(3)  eff(4)  eff(5)  eff(6)  eff(7)  eff(8)  eff(9) eff(10) eff(11) eff(12)
#>-----eb------eb------eb------eb------eb------eb------eb------eb------eb------eb------eb------e
#>                                    Ret ID     Ret %   Table #
#>xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxb----------eb------eb------e
#>                                    Dep ID     Dep %   Table #
#>xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxb----------eb------eb------e
#>
#>EndHeader
#>
200505                                                 1 -999.00                -999.00000
                                    NA                 1       0       0    -16.   -999.    -999       1
    0.    0.    0.    3.   20.   47.   44.   35.   28.   14.    0.    0.
200812                                                 1 -999.00                -999.00000
                                    NA                 1       0       0    -30.   -999.    -999       1
    0.    0.    0.    7.   42.   98.   96.   66.   32.   14.    0.    0.
