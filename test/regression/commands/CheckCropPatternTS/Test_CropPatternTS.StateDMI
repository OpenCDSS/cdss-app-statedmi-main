# Test checking crop pattern time series data where some values are in error
# The set command won't let invalid data be set from parameters so use
# values in a StateCU input file to trigger the check warnings.
# Compare the data csv to make sure the data are being produced as expected
# and the check file csv to make sure the checks are working.
# The expected status is Warning because the check will detect the missing values.
#@expectedStatus Warning
StartLog(LogFile="Results/Test_CheckCropPatternTS.StateDMI.log")
RemoveFile(InputFile="Results\Test_CheckCropPatternTS_out.csv",IfNotFound=Ignore)
RemoveFile(InputFile="Results\Test_CheckCropPatternTS_out.html",IfNotFound=Ignore)
ReadCropPatternTSFromStateCU(InputFile="Data\simple.cds")
# Uncomment the following command to regenerate the expected results.
# WriteCropPatternTSToStateCU(OutputFile="ExpectedResults/Test_CheckCropPatternTS_out.cds")
WriteCropPatternTSToStateCU(OutputFile="Results/Test_CheckCropPatternTS_out.cds")
CompareFiles(InputFile1="ExpectedResults/Test_CheckCropPatternTS_out.cds",InputFile2="Results/Test_CheckCropPatternTS_out.cds",WarnIfDifferent=True)
#
# Check the data and create the check file.
CheckCropPatternTS(ID="*")
# Uncomment the following command to regenerate the expected results.
# WriteCheckFile(OutputFile="ExpectedResults/Test_CheckCropPatternTS_out_check.csv")
WriteCheckFile(OutputFile="Results/Test_CheckCropPatternTS_out_check.csv")
WriteCheckFile(OutputFile="Results/Test_CheckCropPatternTS_out_check.html")
CompareFiles(InputFile1="ExpectedResults/Test_CheckCropPatternTS_out_check.csv",InputFile2="Results/Test_CheckCropPatternTS_out_check.csv",WarnIfDifferent=True)
