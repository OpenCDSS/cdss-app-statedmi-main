# File generated by...
# program:      TSTool 12.05.00 (2017-11-12)
# user:         sam
# date:         Sun Nov 19 17:32:28 America/Denver 2017
# host:         colorado
# directory:    C:\Users\sam\cdss-dev\TSTool\git-repos\cdss-app-tstool-test\test\regression\commands\general\InsertTableColumn
# command line: TSTool
#  -home test/operational/CDSS
# -----------------------------------------------------------------------
# Command file name: "C:\Users\sam\cdss-dev\TSTool\git-repos\cdss-app-tstool-test\test\regression\commands\general\InsertTableColumn\Test_InsertTableColumn_Properties.TSTool"
# Commands: 
# # Test inserting a column into a table for each of the supported data types, headers only
# # -table ID specified with ${Property}
# # -table insert column specified with ${Property}
# # -table insert column before specified with ${Property}
# # -table initial value specified with ${Property}
# StartLog(LogFile="Results/Test_InsertTableColumn_Properties.TSTool.log")
# RemoveFile(InputFile="Results/Test_InsertTableColumn_Properties_out.csv",IfNotFound=Ignore)
# SetProperty(PropertyName="TestTableID",PropertyType=String,PropertyValue="Table1")
# SetProperty(PropertyName="TestTableFile",PropertyType=String,PropertyValue="Data\testtable2.csv")
# SetProperty(PropertyName="TestInsertColumnBefore",PropertyType=String,PropertyValue="endstring")
# ReadTableFromDelimitedFile(TableID="${TestTableID}",InputFile="${TestTableFile}")
# SetProperty(PropertyName="TestInsertColumnDateTime",PropertyType=String,PropertyValue="datetime2")
# SetProperty(PropertyName="TestInsertColumnDouble",PropertyType=String,PropertyValue="double2")
# SetProperty(PropertyName="TestInsertColumnFloat",PropertyType=String,PropertyValue="float2")
# SetProperty(PropertyName="TestInsertColumnInteger",PropertyType=String,PropertyValue="integer2")
# SetProperty(PropertyName="TestInsertColumnShort",PropertyType=String,PropertyValue="short2")
# SetProperty(PropertyName="TestInsertColumnLong",PropertyType=String,PropertyValue="long2")
# SetProperty(PropertyName="TestInsertColumnString",PropertyType=String,PropertyValue="string2")
# SetProperty(PropertyName="InitialDateTime",PropertyType=DateTime,PropertyValue="2011-01-01 12")
# SetProperty(PropertyName="InitialDouble",PropertyType=Double,PropertyValue="22")
# SetProperty(PropertyName="InitialFloat",PropertyType=Double,PropertyValue="25")
# SetProperty(PropertyName="InitialInteger",PropertyType=Integer,PropertyValue="33")
# SetProperty(PropertyName="InitialShort",PropertyType=Integer,PropertyValue="44")
# SetProperty(PropertyName="InitialLong",PropertyType=Integer,PropertyValue="55")
# SetProperty(PropertyName="InitialString",PropertyType=String,PropertyValue="66666")
# InsertTableColumn(TableID="${TestTableID}",InsertColumn="datetime2",InsertBeforeColumn="${TestInsertColumnBefore}",ColumnType=DateTime,InitialValue="${InitialDateTime}")
# InsertTableColumn(TableID="${TestTableID}",InsertColumn="double2",InsertBeforeColumn="${TestInsertColumnBefore}",ColumnType=Double,InitialValue="${InitialDouble}")
# InsertTableColumn(TableID="${TestTableID}",InsertColumn="float2",InsertBeforeColumn="${TestInsertColumnBefore}",ColumnType=Float,InitialValue="${InitialFloat}")
# InsertTableColumn(TableID="${TestTableID}",InsertColumn="integer2",InsertBeforeColumn="${TestInsertColumnBefore}",ColumnType=Integer,InitialValue="${InitialInteger}")
# InsertTableColumn(TableID="${TestTableID}",InsertColumn="short2",InsertBeforeColumn="${TestInsertColumnBefore}",ColumnType=Short,InitialValue="${InitialShort}")
# InsertTableColumn(TableID="${TestTableID}",InsertColumn="long2",InsertBeforeColumn="${TestInsertColumnBefore}",ColumnType=Long,InitialValue="${InitialLong}")
# InsertTableColumn(TableID="${TestTableID}",InsertColumn="string2",InsertBeforeColumn="${TestInsertColumnBefore}",ColumnType=String,InitialValue="${InitialString}",ColumnWidth=12)
# # Uncomment the following to generate the expected results.
# WriteTableToDelimitedFile(TableID="Table1",OutputFile="ExpectedResults\Test_InsertTableColumn_Properties_out.csv")
# WriteTableToDelimitedFile(TableID="Table1",OutputFile="Results\Test_InsertTableColumn_Properties_out.csv")
# # Do regression comparison with the original input
# CompareFiles(InputFile1="ExpectedResults\Test_InsertTableColumn_Properties_out.csv",InputFile2="Results/Test_InsertTableColumn_Properties_out.csv",IfDifferent=Warn)
# 
# -----------------------------------------------------------------------------
# HydroBase database is: HydroBase_CO_20160407 on localhost\CDSS
# HydroBase.db_version:  design version: 20141201  last data change: 20160407
# HydroBase table structure for software is at least 2013040420130404
# HydroBase input name is "".
# Stored procedures are being used.
# -----------------------------------------------------------------------------
# 
# 
# -----------------------------------------------------------------------------
# HydroBase database is: HydroBase_CO_20160802 on localhost\CDSS
# HydroBase.db_version:  design version: 20141201  last data change: 20160802
# HydroBase table structure for software is at least 2013040420130404
# HydroBase input name is "".
# Stored procedures are being used.
# -----------------------------------------------------------------------------
# 
"string1","double1","datetime2","double2","float2","integer2","short2","long2","string2","endstring"
String1,1,2011-01-01 12,22.000000,25.000000,33,44,55,66666,a
String2,2,2011-01-01 12,22.000000,25.000000,33,44,55,66666,b
String3,3,2011-01-01 12,22.000000,25.000000,33,44,55,66666,c
