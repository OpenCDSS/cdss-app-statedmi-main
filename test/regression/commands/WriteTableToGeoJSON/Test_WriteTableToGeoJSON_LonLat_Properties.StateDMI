# Test writing a table to a GeoJSON file
# - point coordinates in lon and lat columns
# - specify command parameters using ${Property}
StartLog(LogFile="Results/Test_WriteTableToGeoJSON_LonLat_Properties.TSTool.log")
RemoveFile(InputFile="Results/Test_WriteTableToGeoJSON_LonLat_Properties_out.csv",IfNotFound=Ignore)
SetProperty(PropertyName="TestTableID",PropertyType=String,PropertyValue="StationMeta")
SetProperty(PropertyName="TestOutputFile",PropertyType=String,PropertyValue="Test_WriteTableToGeoJSON_LonLat_Properties_out.json")
SetProperty(PropertyName="TestLongitudeColumn",PropertyType=String,PropertyValue="Lon")
SetProperty(PropertyName="TestLatitudeColumn",PropertyType=String,PropertyValue="Lat")
ReadTableFromDelimitedFile(TableID="${TestTableID}",InputFile="Data\StationMeta.csv",TextColumns="ID_text")
# Generate the results.
FormatTableString(TableID="StationMeta",InputColumns="Name",Format="Description:  %s",OutputColumn="Description")
# Uncomment the following to regenerate the expected results
# WriteTableToGeoJSON(TableID="${TestTableID}",OutputFile="ExpectedResults/${TestOutputFile}",LongitudeColumn="${TestLongitudeColumn}",LatitudeColumn="${TestLatitudeColumn}",ExcludeColumns="WKTGeometry")
WriteTableToGeoJSON(TableID="${TestTableID}",OutputFile="Results/${TestOutputFile}",LongitudeColumn="${TestLongitudeColumn}",LatitudeColumn="${TestLatitudeColumn}",ExcludeColumns="WKTGeometry")
# Do regression comparison with the original input (possible because strings
# and integers with no formatting issues).
CompareFiles(InputFile1="ExpectedResults/Test_WriteTableToGeoJSON_LonLat_Properties_out.json",InputFile2="Results/Test_WriteTableToGeoJSON_LonLat_Properties_out.json",IfDifferent=Warn)
