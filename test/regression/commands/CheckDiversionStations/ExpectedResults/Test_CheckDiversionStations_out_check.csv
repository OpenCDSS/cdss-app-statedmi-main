#HeaderRevision 0
#
# File generated by...
# program:      StateDMI 3.08.00 (2009-06-01)
# user:         sam
# date:         Tue Jun 02 13:09:16 MDT 2009
# host:         SOPRIS
# directory:    C:\Develop\StateDMI_SourceBuild\StateDMI\test\regression\commands\CheckDiversionStations
# command line: StateDMI -home test\operational\CDSS
#----
# 
# StateDMI check file containing all warning/failure messages from run.
# 
# -----------------------------------------------------------------------
# Command file name: "C:\Develop\StateDMI_SourceBuild\StateDMI\test\regression\commands\CheckDiversionStations\Test_CheckDiversionStations.StateDMI"
# Commands: 
# # Test check diversion station data where each checked value is in error
# # The set command won't let invalid data be set from parameters so use
# # missing values to trigger the check warnings.
# # Compare the data csv to make sure the data are being produced as expected
# # and the check file csv to make sure the checks are working.
# # The expected status is Warning because the check will detect the missing values.
# #@expectedStatus Warning
# StartLog(LogFile="Results/Test_CheckDiversionStations.StateDMI.log")
# RemoveFile(InputFile="Results\Test_CheckDiversionStations_out.csv",IfNotFound=Ignore)
# RemoveFile(InputFile="Results\Test_CheckDiversionStations_out_check.csv",IfNotFound=Ignore)
# RemoveFile(InputFile="Results\Test_CheckDiversionStations_out_check.html",IfNotFound=Ignore)
# SetRiverNetworkNode(ID="Node1",IfNotFound=Add)
# SetDiversionStation(ID="Location1",IfNotFound=Add)
# # Read small file that has errors in efficiencies, delay tables.
# ReadDiversionStationsFromStateMod(InputFile="Data\simple.dds")
# # Uncomment the following command to regenerate the expected results.
# # WriteDiversionStationsToList(OutputFile="ExpectedResults/Test_CheckDiversionStations_out.csv")
# WriteDiversionStationsToList(OutputFile="Results/Test_CheckDiversionStations_out.csv")
# CompareFiles(InputFile1="ExpectedResults/Test_CheckDiversionStations_out.csv",InputFile2="Results/Test_CheckDiversionStations_out.csv",WarnIfDifferent=True)
# #
# # Check the data and create the check file.
# CheckDiversionStations(ID="*")
# # Uncomment the following command to regenerate the expected results.
# WriteCheckFile(OutputFile="ExpectedResults/Test_CheckDiversionStations_out_check.csv")
# WriteCheckFile(OutputFile="Results/Test_CheckDiversionStations_out_check.csv")
# WriteCheckFile(OutputFile="Results/Test_CheckDiversionStations_out_check.html")
# CompareFiles(InputFile1="ExpectedResults/Test_CheckDiversionStations_out_check.csv",InputFile2="Results/Test_CheckDiversionStations_out_check.csv",WarnIfDifferent=True)
# 
# -----------------------------------------------------------------------------
# HydroBase database is: HydroBase on hbserver
# HydroBase.db_version:  design version: 20080701  last data change: 20080901
# HydroBase table structure for software is at least 2007052520070525
# HydroBase input name is "".
# Stored procedures are being used.
# -----------------------------------------------------------------------------
# 
#------------------------------------------------
"Severity","Type","Command","Problem","Recommendation"
WARNING,CommandRun,"CheckDiversionStations(ID=""*"")","Diversion ""Location1"" name is blank.","Specify a diversion name to clarify data."
WARNING,CommandRun,"CheckDiversionStations(ID=""*"")","Diversion ""Location1"" river ID is blank.","Specify a river ID to associate the diversion with a river network node."
WARNING,CommandRun,"CheckDiversionStations(ID=""*"")","Diversion ""Location1"" capacity (-999.00) is invalid.","Specify the capacity as a number >= 0."
WARNING,CommandRun,"CheckDiversionStations(ID=""*"")","Diversion ""Location1"" replacement reservoir option (-999) is invalid.","Specify the data type as one of [0, 1, -1]"
WARNING,CommandRun,"CheckDiversionStations(ID=""*"")","Diversion ""Location1"" user name is blank.","Specify a diversion user name to clarify data."
WARNING,CommandRun,"CheckDiversionStations(ID=""*"")","Diversion ""Location1"" data type (-999) is invalid.","Specify the data type as one of [1, 2, 3, 4, 5]"
WARNING,CommandRun,"CheckDiversionStations(ID=""*"")","Diversion ""Location1"" annual system efficiency (-999.00) is invalid.","Specify the efficiency as 0 to 100 for annual (negative if monthly values are provided)."
WARNING,CommandRun,"CheckDiversionStations(ID=""*"")","Diversion ""Location1"" area (-999.00) is invalid.","Specify the area as a number >= 0."
WARNING,CommandRun,"CheckDiversionStations(ID=""*"")","Diversion ""Location1"" use type (-999) is invalid.","Specify the use type as one of [0, 1, 2, 3, 4, 5]"
WARNING,CommandRun,"CheckDiversionStations(ID=""*"")","Diversion ""Location1"" demand source (-999) is invalid.","Specify the demand source as one of [0, 1, 2, 3, 4, 5, 6, 7, 8]"
WARNING,CommandRun,"CheckDiversionStations(ID=""*"")","Diversion ""360606"" name is blank.","Specify a diversion name to clarify data."
WARNING,CommandRun,"CheckDiversionStations(ID=""*"")","Diversion ""360606"" river ID is blank.","Specify a river ID to associate the diversion with a river network node."
WARNING,CommandRun,"CheckDiversionStations(ID=""*"")","Diversion ""360606"" user name is blank.","Specify a diversion user name to clarify data."
WARNING,CommandRun,"CheckDiversionStations(ID=""*"")","Diversion ""360606"" data type (0) is invalid.","Specify the data type as one of [1, 2, 3, 4, 5]"
WARNING,CommandRun,"CheckDiversionStations(ID=""*"")","Diversion ""360645"" river network ID (999999) is not found in the list of river network nodes.","Specify a valid river network ID to associate the diversion with a river network node."
WARNING,CommandRun,"CheckDiversionStations(ID=""*"")","Diversion ""360645"" capacity (-45.00) is invalid.","Specify the capacity as a number >= 0."
WARNING,CommandRun,"CheckDiversionStations(ID=""*"")","Diversion ""360645"" replacement reservoir option (100) is invalid.","Specify the data type as one of [0, 1, -1]"
WARNING,CommandRun,"CheckDiversionStations(ID=""*"")","Diversion ""360645"" data type (-1) is invalid.","Specify the data type as one of [1, 2, 3, 4, 5]"
WARNING,CommandRun,"CheckDiversionStations(ID=""*"")","Diversion ""360645"" system efficiency for month 1 (-10.00) is invalid.","Specify the efficiency as 0 to 100."
WARNING,CommandRun,"CheckDiversionStations(ID=""*"")","Diversion ""360645"" system efficiency for month 2 (120.00) is invalid.","Specify the efficiency as 0 to 100."
WARNING,CommandRun,"CheckDiversionStations(ID=""*"")","Diversion ""360645"" area (-355.96) is invalid.","Specify the area as a number >= 0."
WARNING,CommandRun,"CheckDiversionStations(ID=""*"")","Diversion ""360645"" use type (-1) is invalid.","Specify the use type as one of [0, 1, 2, 3, 4, 5]"
WARNING,CommandRun,"CheckDiversionStations(ID=""*"")","Diversion ""360645"" demand source (-1) is invalid.","Specify the demand source as one of [0, 1, 2, 3, 4, 5, 6, 7, 8]"
WARNING,CommandRun,"CheckDiversionStations(ID=""*"")","Diversion ""360645"" return 1 location (363543) is not found in the list of river network nodes.","Specify a valid river network ID to associate the return location with a river network node."
WARNING,CommandRun,"CheckDiversionStations(ID=""*"")","Diversion ""360645"" return 1 percent (-100.00) is invalid.","Specify the return percent as a number 0 to 100."
WARNING,CommandRun,"CheckDiversionStations(ID=""*"")","Diversion ""360645"" return 2 location (363543) is not found in the list of river network nodes.","Specify a valid river network ID to associate the return location with a river network node."
WARNING,CommandRun,"CheckDiversionStations(ID=""*"")","Diversion ""360645"" return 2 percent (105.00) is invalid.","Specify the return percent as a number 0 to 100."
