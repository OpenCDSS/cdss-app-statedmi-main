#HeaderRevision 0
#
# File generated by...
# program:      StateDMI 3.08.00 (2009-06-01)
# user:         sam
# date:         Tue Jun 02 17:15:46 MDT 2009
# host:         SOPRIS
# directory:    C:\Develop\StateDMI_SourceBuild\StateDMI\test\regression\commands\CheckRiverNetwork
# command line: StateDMI -home test\operational\CDSS
#----
# 
# StateDMI check file containing all warning/failure messages from run.
# 
# -----------------------------------------------------------------------
# Command file name: "C:\Develop\StateDMI_SourceBuild\StateDMI\test\regression\commands\CheckRiverNetwork\Test_CheckRiverNetwork.StateDMI"
# Commands: 
# # Test checking the river network data where each checked value is in error
# # The set command won't let invalid data be set from parameters so use
# # missing values to trigger the check warnings.
# # Compare the data csv to make sure the data are being produced as expected
# # and the check file csv to make sure the checks are working.
# # The expected status is Warning because the check will detect the missing values.
# #@expectedStatus Warning
# StartLog(LogFile="Results/Test_CheckRiverNetwork.StateDMI.log")
# RemoveFile(InputFile="Results\Test_CheckRiverNetwork_out.csv",IfNotFound=Ignore)
# RemoveFile(InputFile="Results\Test_CheckRiverNetwork_out_check.csv",IfNotFound=Ignore)
# RemoveFile(InputFile="Results\Test_CheckRiverNetwork_out_check.html",IfNotFound=Ignore)
# # Read small file that has errors in efficiencies, delay tables.
# ReadRiverNetworkFromStateMod(InputFile="Data\simple.rin")
# # Uncomment the following command to regenerate the expected results.
# # WriteRiverNetworkToList(OutputFile="ExpectedResults/Test_CheckRiverNetwork_out.csv")
# WriteRiverNetworkToList(OutputFile="Results/Test_CheckRiverNetwork_out.csv")
# CompareFiles(InputFile1="ExpectedResults/Test_CheckRiverNetwork_out.csv",InputFile2="Results/Test_CheckRiverNetwork_out.csv",WarnIfDifferent=True)
# #
# # Check the data and create the check file.
# CheckRiverNetwork(ID="*")
# # Uncomment the following command to regenerate the expected results.
# WriteCheckFile(OutputFile="ExpectedResults/Test_CheckRiverNetwork_out_check.csv")
# WriteCheckFile(OutputFile="Results/Test_CheckRiverNetwork_out_check.csv")
# WriteCheckFile(OutputFile="Results/Test_CheckRiverNetwork_out_check.html")
# CompareFiles(InputFile1="ExpectedResults/Test_CheckRiverNetwork_out_check.csv",InputFile2="Results/Test_CheckRiverNetwork_out_check.csv",WarnIfDifferent=True)
# 
# -----------------------------------------------------------------------------
# HydroBase database is: HydroBase on hbserver
# HydroBase.db_version:  design version: 20080701  last data change: 20080901
# HydroBase table structure for software is at least 2007052520070525
# HydroBase input name is "".
# Stored procedures are being used.
# -----------------------------------------------------------------------------
# 
#------------------------------------------------
"Severity","Type","Command","Problem","Recommendation"
WARNING,CommandRun,"CheckRiverNetwork(ID=""*"")","River node ""514601"" name is blank.","Specify a river node name to clarify data."
WARNING,CommandRun,"CheckRiverNetwork(ID=""*"")","River node ""514601"" downstream node ID is blank.","Specify a downstream node ID."
WARNING,CommandRun,"CheckRiverNetwork(ID=""*"")","River node ""09010500"" downstream node ID (999999) is not found in the list of river network nodes.","Specify a valid river network ID for the downstream node."
WARNING,CommandRun,"CheckRiverNetwork(ID=""*"")","River node ""09010500"" maximum groundwater recharge (-500.00) is invalid.","Specify the maximum groundwater recharge as a number >= 0."
WARNING,CommandRun,"CheckRiverNetwork(ID=""*"")","River node ""512068_Dwn"" downstream node ID (09011000) is not found in the list of river network nodes.","Specify a valid river network ID for the downstream node."
WARNING,CommandRun,"CheckRiverNetwork(ID=""*"")","River node ""coloup_end"" downstream node ID is blank.","Specify a downstream node ID."
