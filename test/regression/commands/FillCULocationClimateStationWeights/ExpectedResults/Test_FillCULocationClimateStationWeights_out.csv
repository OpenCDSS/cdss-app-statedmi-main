#HeaderRevision 0
#
# File generated by...
# program:      StateDMI 3.02.00 beta (2008-10-07)
# user:         sam
# date:         Thu Dec 18 15:20:38 MST 2008
# host:         SOPRIS
# directory:    C:\Develop\StateDMI_SourceBuild\StateDMI\test\regression\commands\FillCULocationClimateStationWeights
# command line: StateDMI -home test\operational\CDSS
#----
# 
# StateCU location information as delimited list file.
# See also the associated climate station assignment and collection files.
# 
# -----------------------------------------------------------------------
# Command file name: "C:\Develop\StateDMI_SourceBuild\StateDMI\test\regression\commands\FillCULocationClimateStationWeights\Test_FillCULocationClimateStationWeights.StateDMI"
# Commands: 
# # Test filling CU location station weights (involves other commands also)
# # with a couple of generated stations
# StartLog(LogFile="Results/Test_FillCULocationClimateStationWeights.StateDMI.log")
# RemoveFile(InputFile="Results\Test_FillCULocationClimateStationWeights_out.csv")
# RemoveFile(InputFile="Results\Test_FillCULocationClimateStationWeights_out_ClimateStations.csv")
# RemoveFile(InputFile="Results\Test_FillCULocationClimateStationWeights_out_Collections.csv")
# SetCULocation(ID="2000505",Name="Test 1",Latitude=44.01,Elevation=5001,Region1="Test County 1",Region2="Test HUC 1",AWC=.51,IfNotFound=Add)
# SetCULocation(ID="2000623",Name="Test 2",Latitude=44.02,Elevation=5002,Region1="Test County 2",Region2="Test HUC 2",AWC=.52,IfNotFound=Add)
# SetCULocation(ID="2000812",Name="Test 3",Latitude=44.03,Elevation=5003,Region1="Test County 3",Region2="Test HUC 3",AWC=.53,IfNotFound=Add)
# SetClimateStation(ID="station1",Name="Station 1",Latitude=44.01,Elevation=5501,Region1="County1",IfNotFound=Add)
# FillCULocationClimateStationWeights(ID="*",IncludeOrographicTempAdj=True,IncludeOrographicPrecAdj=True,Weights="station1,.2,.3,.11,.12;station2,.8,.7,.21,.22")
# # Uncomment the following command to regenerate the expected results.
# WriteCULocationsToList(OutputFile="ExpectedResults/Test_FillCULocationClimateStationWeights_out.csv")
# WriteCULocationsToList(OutputFile="Results/Test_FillCULocationClimateStationWeights_out.csv")
# CompareFiles(InputFile1="ExpectedResults/Test_FillCULocationClimateStationWeights_out.csv",InputFile2="Results/Test_FillCULocationClimateStationWeights_out.csv",WarnIfDifferent=True)
# CompareFiles(InputFile1="ExpectedResults/Test_FillCULocationClimateStationWeights_out_ClimateStations.csv",InputFile2="Results/Test_FillCULocationClimateStationWeights_out_ClimateStations.csv",WarnIfDifferent=True)
# CompareFiles(InputFile1="ExpectedResults/Test_FillCULocationClimateStationWeights_out_Collections.csv",InputFile2="Results/Test_FillCULocationClimateStationWeights_out_Collections.csv",WarnIfDifferent=True)
# 
# -----------------------------------------------------------------------------
# HydroBase database is: HydroBase on hbserver
# HydroBase.db_version:  design version: 20080701  last data change: 20080901
# HydroBase table structure for software is at least 2007052520070525
# HydroBase input name is "".
# Stored procedures are being used.
# -----------------------------------------------------------------------------
# 
#------------------------------------------------
"ID","NAME","LATITUDE (DEC. DEG.)","ELEVATION (FT)","REGION1","REGION2","NUMBER OF CLIMATE STATIONS","AVAILABLE WATER CONTENT, AWC (FRACTION)"
2000505,Test 1,44.01,5001.00,Test County 1,Test HUC 1,2,0.5100
2000623,Test 2,44.02,5002.00,Test County 2,Test HUC 2,2,0.5200
2000812,Test 3,44.03,5003.00,Test County 3,Test HUC 3,2,0.5300
